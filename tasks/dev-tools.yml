---
# Install Development Tools

- name: Install Development Tools (dnf)
  become: yes
  dnf:
    name:
      - '@Development Tools'
      - swift-lang
      - golang
      - clang
      - llvm
      - lld
      - lldb
      - musl-devel
      - musl-clang
      - musl-gcc
      - cmake
      - ninja-build
      - fish
      - gh
      - tokei
      - fzf
    state: present
  tags: [devtools]

- name: Install Development Libraries (dnf)
  become: yes
  dnf:
    name:
      - libxcb
      - openssl-devel
      - libX11-devel
    state: present
  tags: [libs]

- name: Check if deno is installed
  stat:
    path: '{{ ansible_env.HOME }}/.deno'
  register: deno_path_info

- name: Download deno installer
  get_url:
    url: https://deno.land/install.sh
    dest: /tmp/deno_installer.sh
    mode: 0755
  when: not deno_path_info.stat.exists

- name: Install deno
  command:
    cmd: bash -c "/tmp/deno_installer.sh"
    creates: '{{ ansible_env.HOME }}/.deno/bin/deno'

- name: Add deno to PATH
  lineinfile:
    line: 'export PATH="$HOME/.deno/bin:$PATH"'
    path: '{{ ansible_env.HOME }}/.bashrc'
    insertbefore: '#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!'

- name: Install wasmer wasm-wasi runtime
  command: 
    cmd: curl https://get.wasmer.io -sSfL | sh
    creates: '{{ ansible_env.HOME }}/.wasmer/bin/wasmer'
  tags: [devtools]

- name: Install Java and Gradle (sdkman)
  include_role:
    name: comcast.sdkman
  vars:
    sdkman_user: '{{ ansible_user_id }}'
    sdkman_group: '{{ ansible_user_id }}'
    sdkman_auto_answer: true
    sdkman_update: true
    sdkman_install_packages:
      - { candidate: java, version: 17.0.3.fx-zulu }
      - { candidate: gradle, version: 7.4.2 }
  tags: [devtools, java, gradle]

- name: Check if nvm is installed
  stat:
    path: '{{ ansible_env.HOME }}/.nvm'
  register: nvm_dir_info

- name: Clone node version manager
  git:
    repo: https://github.com/nvm-sh/nvm.git
    dest: '{{ ansible_env.HOME }}/.nvm'
    depth: 1
  when: not nvm_dir_info.stat.exists

- name: Append nvm config to .bashrc
  blockinfile:
    path: '{{ ansible_env.HOME }}/.bashrc'
    block: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    insertbefore: '#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!'
  when: not nvm_dir_info.stat.exists

- name: Install NodeJS
  command: 'bash -c "\. {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install --lts"'
  when: not nvm_dir_info.stat.exists
  tags: [devtools, nodejs]
